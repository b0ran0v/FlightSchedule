// <auto-generated />
using System;
using FlightSchedule.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace FlightSchedule.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("FlightSchedule.Models.City", b =>
                {
                    b.Property<string>("CityId")
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CityId");

                    b.ToTable("Cities");
                });

            modelBuilder.Entity("FlightSchedule.Models.Flight", b =>
                {
                    b.Property<string>("FlightId")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("DepartureCityCityId")
                        .HasColumnType("nvarchar(3)");

                    b.Property<DateTime>("DepartureTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("DestinationCityCityId")
                        .HasColumnType("nvarchar(3)");

                    b.Property<DateTime>("LandingTime")
                        .HasColumnType("datetime2");

                    b.HasKey("FlightId");

                    b.HasIndex("DepartureCityCityId");

                    b.HasIndex("DestinationCityCityId");

                    b.ToTable("Flights");
                });

            modelBuilder.Entity("FlightSchedule.Models.Flight", b =>
                {
                    b.HasOne("FlightSchedule.Models.City", "DepartureCity")
                        .WithMany()
                        .HasForeignKey("DepartureCityCityId");

                    b.HasOne("FlightSchedule.Models.City", "DestinationCity")
                        .WithMany()
                        .HasForeignKey("DestinationCityCityId");

                    b.Navigation("DepartureCity");

                    b.Navigation("DestinationCity");
                });
#pragma warning restore 612, 618
        }
    }
}
